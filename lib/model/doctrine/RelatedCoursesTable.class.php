<?php

/**
 * RelatedCoursesTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class RelatedCoursesTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object RelatedCoursesTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('RelatedCourses');
    }
    
    public function checkIfCourseHasPrerequisites($courseId = NULL )
    {
        $q  = Doctrine_Query::create()
                ->from('RelatedCourses')
                ->where('course_id  = ?', $courseId);
        
        $q->execute(); 
        
        if($q->count() == 0)
            return FALSE; 
        else 
            return TRUE;         
    }
    public function getRelatedCoursesDetailByCourseId($courseId = NULL)
    {
        $q  = Doctrine_Query::create()
                ->from('RelatedCourses')
                ->where('course_id  = ?', $courseId);
        
        return $q->fetchOne();        
    }
    public function getPrerequisiteCourses($courseId = NULL)
    {
        $q  = Doctrine_Query::create()
                ->from('RelatedCourses')
                ->where('course_id  = ?', $courseId);
        
        return $q->execute();        
    }  
  
    public function getPrerequisiteCoursesList($departmentId = NULL, $courseId = NULL)
    {
        $courseNumbers =  array(); 
        $q  = Doctrine_Query::create()
                ->from('RelatedCourses')
                ->where('course_id  = ?', $courseId)
                ->execute();
        if( $q->count() != 0 )
        {
            foreach($q as $prerequisite )
            {
                $courseNumbers[] = $prerequisite->getPrerequisiteCourseNumber(); 
            }    
        
            return Doctrine_Core::getTable('Course')->getCoursesByCourseNumbers($departmentId, $courseNumbers);        
        }
        else
            return NULL; 
    }    

    public function getPrerequisiteCourseIdsArray($departmentId = NULL, $courseId = NULL)
    {
        $courseNumbers =  array(); 
        $q  = Doctrine_Query::create()
                ->from('RelatedCourses')
                ->where('course_id  = ?', $courseId)
                ->execute();
        if( $q->count() != 0 )
        {
            foreach($q as $prerequisite )
            {
                $courseNumbers[] = $prerequisite->getPrerequisiteCourseNumber(); 
            }    
            ## FETCH DEPARTMENT BASED COURSES HAVING $courseNumbers 
            return Doctrine_Core::getTable('Course')->getCourseIdsArrayByCourseNumbersArray($departmentId, $courseNumbers);        
        }
        else
            return NULL; 
    }     
    
    public function checkIfPrerequisiteExists($courseId=NULL, $cNumber=NULL)
    {
        $q  = Doctrine_Query::create()
                ->from('RelatedCourses')
                ->where('course_id  = ?', $courseId)
                ->andWhere('prerequisite_course_number = ?', $cNumber);
        
        $q->execute(); 
        
        if($q->count() == 0)
            return FALSE; 
        else 
            return TRUE;   
    }
    
    public function checkIfCoursesHavePrerequisites($courseIdsArray = NULL )
    {
        $q  = Doctrine_Query::create()
                ->from('RelatedCourses')
                ->whereIn('course_id', $courseIdsArray);
        
        $q->execute(); 
        
        if($q->count() == 0)
            return FALSE; 
        else 
            return TRUE;         
    } 
    
    public function getSemesterPrerequisiteCourseIdsArray($semesterCoursesArray = null, $departmentId = NULL )
    {
        $q  = Doctrine_Query::create()
                ->from('RelatedCourses')
                ->whereIn('course_id', $semesterCoursesArray);
        
        $q->execute(); 
        
        ##Prerequisite courses are courseCodes here, so for each course codes find related courseIds 
        if($q->count() != 0 )
        {
            $prerequisiteCourseNumbersArray = array();
            foreach($q->execute() as $spCourses )
            {
               $prerequisiteCourseNumbersArray[] = $spCourses->getPrerequisiteCourseNumber();
            }
            return Doctrine_core::getTable('Course')->getCourseIdsArrayByCourseNumbersArray($departmentId, $prerequisiteCourseNumbersArray);
        }
        else
            return null; 
    }

    public function getSemesterDroppableCourseIdsArray($semesterCourseIdsArray = null, $failedCourseIdsArray = null )
    {
        ## FailedCourseNumbersArray
        $failedCourseNumbersArray = Doctrine_Core::getTable('Course')->getCourseNumbersArrayByCourseIdsArray($failedCourseIdsArray);
        
        $q  = Doctrine_Query::create()
                ->from('RelatedCourses')
                ->whereIn('course_id', $semesterCourseIdsArray)
                ->andWhereIn('prerequisite_course_number', $failedCourseNumbersArray);
        
        $q->execute(); 
        
        ##Prerequisite courses are courseCodes here, so for each course codes find related courseIds 
        if($q->count() != 0 )
        {
            $semesterDroppableCourseIdsArray = array();
            foreach($q->execute() as $spCourses )
            {
               $semesterDroppableCourseIdsArray[] = $spCourses->getCourseId();
            }
            return $semesterDroppableCourseIdsArray;
        }
        else
            return null; 
    }    
    
    public function getRelatedCoursesByCourseNumber($courseNumber = NULL)
    {
        $related_courses = Doctrine_Query::create()
                ->from('RelatedCourses')
                ->where('prerequisite_course_number = ?', $courseNumber)
                ->execute();
        
        return $related_courses;
    }
}