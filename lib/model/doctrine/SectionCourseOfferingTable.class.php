<?php

/**
 * SectionCourseOfferingTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class SectionCourseOfferingTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object SectionCourseOfferingTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('SectionCourseOffering');
    }
    
    public function getOneBatchOneSemesterCourses( $sectionId = null )
    {
        $q = Doctrine_Query::create()
                ->from('SectionCourseOffering sco')
                ->where('sco.section_id = ?', $sectionId);
        return $q->execute();
    }

    public function getSectionSemesterCourses( $sectionId = null )
    {
        $q = Doctrine_Query::create()
                ->from('SectionCourseOffering sco')
                ->where('sco.section_id = ?', $sectionId);
        return $q->execute();
    }
    public function getSectionSemesterCoursesArray( $sectionId = null )
    {
        $q = Doctrine_Query::create()
                ->from('SectionCourseOffering sco')
                ->where('sco.section_id = ?', $sectionId);
        $q->execute();
        
        if($q->count() !=0 )
        {
            $semesterCoursesArray  =  array();
            foreach($q->execute() as $ssc )
                $semesterCoursesArray[$ssc->getCourseId()] = $ssc->getCourse();
            
            return $semesterCoursesArray; 
        }
        else
        {
            return null; 
        }
    }    

    public function checkIfCourseIsDefined($sectionId = null)
    {
        $q = Doctrine_Query::create()
                ->from('SectionCourseOffering sco')
                ->where('sco.section_id = ?', $sectionId);
        if($q->execute()->count() == 0)
            return FALSE;
        else
            return TRUE;
    }
    
    public function checkIfCourseIsAssigned($courseId, $sectionId)
    {
        $q = Doctrine_Query::create()
                ->from('SectionCourseOffering sco')
                ->where('sco.section_id     = ?', $sectionId)
                ->andWhere('sco.course_id   = ?', $courseId);
        if($q->execute()->count() == 0)
            return FALSE;
        else
            return TRUE;
    }    
    
    public function checkIfGradeSubmittedForAllCourses($sectionId)
    {        
        $q = Doctrine_Query::create()
                ->from('SectionCourseOffering sco')
                ->where('sco.section_id     = ?', $sectionId)
                ->andWhere('sco.grade_status   = ?', sfConfig::get('app_grade_not_submitted'));
        if($q->execute()->count() == 0)
            return TRUE;
        else
            return FALSE;
    }  
    
    public function getAllowedCoursesForGrade($sectionId)
    {
        $gradeStatus    = 0; 
        $q = Doctrine_Query::create()
                ->from('SectionCourseOffering sco')
                ->where('sco.section_id     = ?', $sectionId)
                ->andWhere('sco.grade_status   = ?', $gradeStatus);
        
        /*foreach($q->execute() as $availableCourses)
            $courseArray[$availableCourses->getId()] = $availableCourses->getCourse();
         * 
         */
        
        return $q->execute();
    }  
    public function getOneSectionsOneCourse($sectionId, $courseId)
    {
        $q = Doctrine_Query::create()
                ->from('SectionCourseOffering sco')
                ->where('sco.section_id     = ?', $sectionId)
                ->andWhere('sco.course_id   = ?', $courseId);
        
        return $q->fetchOne();        
    }    
    
    public function checkToGenerateSemesterSlip($sectionId )
    {
        $q = Doctrine_Query::create()
                ->from('SectionCourseOffering sco')
                ->where('sco.section_id     = ?', $sectionId);
        
        if($q->execute()->count() == 0)
            return FALSE;
        else
            return TRUE;        
    }
    public function checkIfGradeSubmittedBySectionId($sectionId)
    {
        if($this->checkIfCourseIsDefined($sectionId) )
        {
            $q = Doctrine_Query::create()
                    ->from('SectionCourseOffering sco')
                    ->where('sco.section_id     = ?', $sectionId)
                    ->andWhere('sco.grade_status   = ?', sfConfig::get('app_grade_not_submitted'));
            if($q->execute()->count() == 0)
                return TRUE;
            else
                return FALSE;
        }
        else {
            
            return FALSE;
        }
    } 
    public function checkIfCourseGradeSubmitted($sectionId=NULL, $courseId=NULL)
    {
        $gradeStatus    = 1; 
        if($this->checkIfCourseIsDefined($sectionId) )
        {
            $q = Doctrine_Query::create()
                    ->from('SectionCourseOffering sco')
                    ->where('sco.section_id     = ?', $sectionId)
                    ->andWhere('sco.course_id   = ?', $courseId )
                    ->andWhere('sco.grade_status   = ?', $gradeStatus);
            if($q->execute()->count() == 0)
                return FALSE;
            else
                return TRUE;
        }
        else {
            
            return FALSE;
        }
    }     
}