<?php

/**
 * BaseProgram
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $department_id
 * @property integer $program_type_id
 * @property integer $enrollment_type_id
 * @property string $minor
 * @property integer $number_of_semesters
 * @property integer $total_max_chr
 * @property integer $total_min_chr
 * @property integer $number_of_years
 * @property integer $max_number_of_years
 * @property date $approval_date
 * @property boolean $status
 * @property Department $Department
 * @property ProgramType $ProgramType
 * @property EnrollmentType $EnrollmentType
 * @property Doctrine_Collection $ProgramSections
 * @property Doctrine_Collection $CourseChecklists
 * @property Doctrine_Collection $ProgramCheckListBreakdowns
 * @property Doctrine_Collection $EnrollmentInfos
 * @property Doctrine_Collection $PromotionSettings
 * 
 * @method string              getName()                       Returns the current record's "name" value
 * @method integer             getDepartmentId()               Returns the current record's "department_id" value
 * @method integer             getProgramTypeId()              Returns the current record's "program_type_id" value
 * @method integer             getEnrollmentTypeId()           Returns the current record's "enrollment_type_id" value
 * @method string              getMinor()                      Returns the current record's "minor" value
 * @method integer             getNumberOfSemesters()          Returns the current record's "number_of_semesters" value
 * @method integer             getTotalMaxChr()                Returns the current record's "total_max_chr" value
 * @method integer             getTotalMinChr()                Returns the current record's "total_min_chr" value
 * @method integer             getNumberOfYears()              Returns the current record's "number_of_years" value
 * @method integer             getMaxNumberOfYears()           Returns the current record's "max_number_of_years" value
 * @method date                getApprovalDate()               Returns the current record's "approval_date" value
 * @method boolean             getStatus()                     Returns the current record's "status" value
 * @method Department          getDepartment()                 Returns the current record's "Department" value
 * @method ProgramType         getProgramType()                Returns the current record's "ProgramType" value
 * @method EnrollmentType      getEnrollmentType()             Returns the current record's "EnrollmentType" value
 * @method Doctrine_Collection getProgramSections()            Returns the current record's "ProgramSections" collection
 * @method Doctrine_Collection getCourseChecklists()           Returns the current record's "CourseChecklists" collection
 * @method Doctrine_Collection getProgramCheckListBreakdowns() Returns the current record's "ProgramCheckListBreakdowns" collection
 * @method Doctrine_Collection getEnrollmentInfos()            Returns the current record's "EnrollmentInfos" collection
 * @method Doctrine_Collection getPromotionSettings()          Returns the current record's "PromotionSettings" collection
 * @method Program             setName()                       Sets the current record's "name" value
 * @method Program             setDepartmentId()               Sets the current record's "department_id" value
 * @method Program             setProgramTypeId()              Sets the current record's "program_type_id" value
 * @method Program             setEnrollmentTypeId()           Sets the current record's "enrollment_type_id" value
 * @method Program             setMinor()                      Sets the current record's "minor" value
 * @method Program             setNumberOfSemesters()          Sets the current record's "number_of_semesters" value
 * @method Program             setTotalMaxChr()                Sets the current record's "total_max_chr" value
 * @method Program             setTotalMinChr()                Sets the current record's "total_min_chr" value
 * @method Program             setNumberOfYears()              Sets the current record's "number_of_years" value
 * @method Program             setMaxNumberOfYears()           Sets the current record's "max_number_of_years" value
 * @method Program             setApprovalDate()               Sets the current record's "approval_date" value
 * @method Program             setStatus()                     Sets the current record's "status" value
 * @method Program             setDepartment()                 Sets the current record's "Department" value
 * @method Program             setProgramType()                Sets the current record's "ProgramType" value
 * @method Program             setEnrollmentType()             Sets the current record's "EnrollmentType" value
 * @method Program             setProgramSections()            Sets the current record's "ProgramSections" collection
 * @method Program             setCourseChecklists()           Sets the current record's "CourseChecklists" collection
 * @method Program             setProgramCheckListBreakdowns() Sets the current record's "ProgramCheckListBreakdowns" collection
 * @method Program             setEnrollmentInfos()            Sets the current record's "EnrollmentInfos" collection
 * @method Program             setPromotionSettings()          Sets the current record's "PromotionSettings" collection
 * 
 * @package    srmsnew
 * @subpackage model
 * @author     EyuelG
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProgram extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('program');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('department_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('program_type_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('enrollment_type_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('minor', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('number_of_semesters', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('total_max_chr', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('total_min_chr', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('number_of_years', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('max_number_of_years', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('approval_date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));


        $this->index('program_index', array(
             'fields' => 
             array(
              0 => 'department_id',
              1 => 'name',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Department', array(
             'local' => 'department_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ProgramType', array(
             'local' => 'program_type_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('EnrollmentType', array(
             'local' => 'enrollment_type_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ProgramSection as ProgramSections', array(
             'local' => 'id',
             'foreign' => 'program_id'));

        $this->hasMany('CourseChecklist as CourseChecklists', array(
             'local' => 'id',
             'foreign' => 'program_id'));

        $this->hasMany('ProgramChecklistBreakdown as ProgramCheckListBreakdowns', array(
             'local' => 'id',
             'foreign' => 'program_id'));

        $this->hasMany('EnrollmentInfo as EnrollmentInfos', array(
             'local' => 'id',
             'foreign' => 'program_id'));

        $this->hasMany('PromotionSetting as PromotionSettings', array(
             'local' => 'id',
             'foreign' => 'program_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}