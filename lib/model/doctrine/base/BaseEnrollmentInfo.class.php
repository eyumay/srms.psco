<?php

/**
 * BaseEnrollmentInfo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $student_id
 * @property string $student_uid
 * @property integer $program_id
 * @property integer $section_id
 * @property string $academic_year
 * @property integer $year
 * @property integer $semester
 * @property boolean $leftout
 * @property integer $academic_status
 * @property integer $semester_action
 * @property integer $payment_status
 * @property integer $enrollment_action
 * @property string $mention
 * @property integer $previous_chrs
 * @property integer $semester_chrs
 * @property integer $total_chrs
 * @property float $previous_grade_points
 * @property float $semester_grade_points
 * @property float $total_grade_points
 * @property float $previous_repeated_chrs
 * @property float $semester_repeated_chrs
 * @property float $total_repeated_chrs
 * @property float $previous_repeated_grade_points
 * @property float $semester_repeated_grade_points
 * @property float $total_repeated_grade_points
 * @property integer $program_checklist_id
 * @property Student $Student
 * @property Program $Program
 * @property ProgramSection $ProgramSection
 * @property Doctrine_Collection $Registrations
 * @property Doctrine_Collection $StudentReadmissions
 * @property Doctrine_Collection $StudentWithdrawal
 * @property Doctrine_Collection $CoursePools
 * 
 * @method integer             getStudentId()                      Returns the current record's "student_id" value
 * @method string              getStudentUid()                     Returns the current record's "student_uid" value
 * @method integer             getProgramId()                      Returns the current record's "program_id" value
 * @method integer             getSectionId()                      Returns the current record's "section_id" value
 * @method string              getAcademicYear()                   Returns the current record's "academic_year" value
 * @method integer             getYear()                           Returns the current record's "year" value
 * @method integer             getSemester()                       Returns the current record's "semester" value
 * @method boolean             getLeftout()                        Returns the current record's "leftout" value
 * @method integer             getAcademicStatus()                 Returns the current record's "academic_status" value
 * @method integer             getSemesterAction()                 Returns the current record's "semester_action" value
 * @method integer             getPaymentStatus()                  Returns the current record's "payment_status" value
 * @method integer             getEnrollmentAction()               Returns the current record's "enrollment_action" value
 * @method string              getMention()                        Returns the current record's "mention" value
 * @method integer             getPreviousChrs()                   Returns the current record's "previous_chrs" value
 * @method integer             getSemesterChrs()                   Returns the current record's "semester_chrs" value
 * @method integer             getTotalChrs()                      Returns the current record's "total_chrs" value
 * @method float               getPreviousGradePoints()            Returns the current record's "previous_grade_points" value
 * @method float               getSemesterGradePoints()            Returns the current record's "semester_grade_points" value
 * @method float               getTotalGradePoints()               Returns the current record's "total_grade_points" value
 * @method float               getPreviousRepeatedChrs()           Returns the current record's "previous_repeated_chrs" value
 * @method float               getSemesterRepeatedChrs()           Returns the current record's "semester_repeated_chrs" value
 * @method float               getTotalRepeatedChrs()              Returns the current record's "total_repeated_chrs" value
 * @method float               getPreviousRepeatedGradePoints()    Returns the current record's "previous_repeated_grade_points" value
 * @method float               getSemesterRepeatedGradePoints()    Returns the current record's "semester_repeated_grade_points" value
 * @method float               getTotalRepeatedGradePoints()       Returns the current record's "total_repeated_grade_points" value
 * @method integer             getProgramChecklistId()             Returns the current record's "program_checklist_id" value
 * @method Student             getStudent()                        Returns the current record's "Student" value
 * @method Program             getProgram()                        Returns the current record's "Program" value
 * @method ProgramSection      getProgramSection()                 Returns the current record's "ProgramSection" value
 * @method Doctrine_Collection getRegistrations()                  Returns the current record's "Registrations" collection
 * @method Doctrine_Collection getStudentReadmissions()            Returns the current record's "StudentReadmissions" collection
 * @method Doctrine_Collection getStudentWithdrawal()              Returns the current record's "StudentWithdrawal" collection
 * @method Doctrine_Collection getCoursePools()                    Returns the current record's "CoursePools" collection
 * @method EnrollmentInfo      setStudentId()                      Sets the current record's "student_id" value
 * @method EnrollmentInfo      setStudentUid()                     Sets the current record's "student_uid" value
 * @method EnrollmentInfo      setProgramId()                      Sets the current record's "program_id" value
 * @method EnrollmentInfo      setSectionId()                      Sets the current record's "section_id" value
 * @method EnrollmentInfo      setAcademicYear()                   Sets the current record's "academic_year" value
 * @method EnrollmentInfo      setYear()                           Sets the current record's "year" value
 * @method EnrollmentInfo      setSemester()                       Sets the current record's "semester" value
 * @method EnrollmentInfo      setLeftout()                        Sets the current record's "leftout" value
 * @method EnrollmentInfo      setAcademicStatus()                 Sets the current record's "academic_status" value
 * @method EnrollmentInfo      setSemesterAction()                 Sets the current record's "semester_action" value
 * @method EnrollmentInfo      setPaymentStatus()                  Sets the current record's "payment_status" value
 * @method EnrollmentInfo      setEnrollmentAction()               Sets the current record's "enrollment_action" value
 * @method EnrollmentInfo      setMention()                        Sets the current record's "mention" value
 * @method EnrollmentInfo      setPreviousChrs()                   Sets the current record's "previous_chrs" value
 * @method EnrollmentInfo      setSemesterChrs()                   Sets the current record's "semester_chrs" value
 * @method EnrollmentInfo      setTotalChrs()                      Sets the current record's "total_chrs" value
 * @method EnrollmentInfo      setPreviousGradePoints()            Sets the current record's "previous_grade_points" value
 * @method EnrollmentInfo      setSemesterGradePoints()            Sets the current record's "semester_grade_points" value
 * @method EnrollmentInfo      setTotalGradePoints()               Sets the current record's "total_grade_points" value
 * @method EnrollmentInfo      setPreviousRepeatedChrs()           Sets the current record's "previous_repeated_chrs" value
 * @method EnrollmentInfo      setSemesterRepeatedChrs()           Sets the current record's "semester_repeated_chrs" value
 * @method EnrollmentInfo      setTotalRepeatedChrs()              Sets the current record's "total_repeated_chrs" value
 * @method EnrollmentInfo      setPreviousRepeatedGradePoints()    Sets the current record's "previous_repeated_grade_points" value
 * @method EnrollmentInfo      setSemesterRepeatedGradePoints()    Sets the current record's "semester_repeated_grade_points" value
 * @method EnrollmentInfo      setTotalRepeatedGradePoints()       Sets the current record's "total_repeated_grade_points" value
 * @method EnrollmentInfo      setProgramChecklistId()             Sets the current record's "program_checklist_id" value
 * @method EnrollmentInfo      setStudent()                        Sets the current record's "Student" value
 * @method EnrollmentInfo      setProgram()                        Sets the current record's "Program" value
 * @method EnrollmentInfo      setProgramSection()                 Sets the current record's "ProgramSection" value
 * @method EnrollmentInfo      setRegistrations()                  Sets the current record's "Registrations" collection
 * @method EnrollmentInfo      setStudentReadmissions()            Sets the current record's "StudentReadmissions" collection
 * @method EnrollmentInfo      setStudentWithdrawal()              Sets the current record's "StudentWithdrawal" collection
 * @method EnrollmentInfo      setCoursePools()                    Sets the current record's "CoursePools" collection
 * 
 * @package    srmsnew
 * @subpackage model
 * @author     EyuelG
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEnrollmentInfo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('enrollment_info');
        $this->hasColumn('student_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('student_uid', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('program_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('section_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('academic_year', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('year', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('semester', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('leftout', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('academic_status', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('semester_action', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('payment_status', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('enrollment_action', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('mention', 'string', 5, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 5,
             ));
        $this->hasColumn('previous_chrs', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('semester_chrs', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('total_chrs', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('previous_grade_points', 'float', null, array(
             'type' => 'float',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('semester_grade_points', 'float', null, array(
             'type' => 'float',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('total_grade_points', 'float', null, array(
             'type' => 'float',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('previous_repeated_chrs', 'float', null, array(
             'type' => 'float',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('semester_repeated_chrs', 'float', null, array(
             'type' => 'float',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('total_repeated_chrs', 'float', null, array(
             'type' => 'float',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('previous_repeated_grade_points', 'float', null, array(
             'type' => 'float',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('semester_repeated_grade_points', 'float', null, array(
             'type' => 'float',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('total_repeated_grade_points', 'float', null, array(
             'type' => 'float',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('program_checklist_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Student', array(
             'local' => 'student_id',
             'foreign' => 'id'));

        $this->hasOne('Program', array(
             'local' => 'program_id',
             'foreign' => 'id'));

        $this->hasOne('ProgramSection', array(
             'local' => 'section_id',
             'foreign' => 'id'));

        $this->hasMany('Registration as Registrations', array(
             'local' => 'id',
             'foreign' => 'enrollment_info_id'));

        $this->hasMany('StudentReadmission as StudentReadmissions', array(
             'local' => 'id',
             'foreign' => 'enrollment_info_id'));

        $this->hasMany('StudentWithdrawal', array(
             'local' => 'id',
             'foreign' => 'enrollment_info_id'));

        $this->hasMany('CoursePool as CoursePools', array(
             'local' => 'id',
             'foreign' => 'enrollment_info_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}