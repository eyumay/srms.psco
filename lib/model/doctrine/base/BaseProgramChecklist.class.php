<?php

/**
 * BaseProgramChecklist
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $program_id
 * @property integer $number_of_semesters
 * @property integer $total_maximum_chr
 * @property integer $total_minimum_chr
 * @property integer $number_of_years
 * @property integer $max_number_of_years
 * @property boolean $status
 * @property string $remark
 * @property Program $Program
 * @property Doctrine_Collection $CheckListBreakdowns
 * 
 * @method integer             getProgramId()           Returns the current record's "program_id" value
 * @method integer             getNumberOfSemesters()   Returns the current record's "number_of_semesters" value
 * @method integer             getTotalMaximumChr()     Returns the current record's "total_maximum_chr" value
 * @method integer             getTotalMinimumChr()     Returns the current record's "total_minimum_chr" value
 * @method integer             getNumberOfYears()       Returns the current record's "number_of_years" value
 * @method integer             getMaxNumberOfYears()    Returns the current record's "max_number_of_years" value
 * @method boolean             getStatus()              Returns the current record's "status" value
 * @method string              getRemark()              Returns the current record's "remark" value
 * @method Program             getProgram()             Returns the current record's "Program" value
 * @method Doctrine_Collection getCheckListBreakdowns() Returns the current record's "CheckListBreakdowns" collection
 * @method ProgramChecklist    setProgramId()           Sets the current record's "program_id" value
 * @method ProgramChecklist    setNumberOfSemesters()   Sets the current record's "number_of_semesters" value
 * @method ProgramChecklist    setTotalMaximumChr()     Sets the current record's "total_maximum_chr" value
 * @method ProgramChecklist    setTotalMinimumChr()     Sets the current record's "total_minimum_chr" value
 * @method ProgramChecklist    setNumberOfYears()       Sets the current record's "number_of_years" value
 * @method ProgramChecklist    setMaxNumberOfYears()    Sets the current record's "max_number_of_years" value
 * @method ProgramChecklist    setStatus()              Sets the current record's "status" value
 * @method ProgramChecklist    setRemark()              Sets the current record's "remark" value
 * @method ProgramChecklist    setProgram()             Sets the current record's "Program" value
 * @method ProgramChecklist    setCheckListBreakdowns() Sets the current record's "CheckListBreakdowns" collection
 * 
 * @package    srmsnew
 * @subpackage model
 * @author     EyuelG
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProgramChecklist extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('program_checklist');
        $this->hasColumn('program_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => true,
             ));
        $this->hasColumn('number_of_semesters', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('total_maximum_chr', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('total_minimum_chr', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('number_of_years', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('max_number_of_years', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('remark', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Program', array(
             'local' => 'program_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ChecklistBreakdown as CheckListBreakdowns', array(
             'local' => 'id',
             'foreign' => 'program_checklist_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}