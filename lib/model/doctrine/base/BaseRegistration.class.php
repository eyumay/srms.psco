<?php

/**
 * BaseRegistration
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $enrollment_info_id
 * @property date $date
 * @property boolean $is_grade_complain
 * @property boolean $is_reexam
 * @property boolean $is_makeup
 * @property boolean $is_add
 * @property boolean $is_drop
 * @property boolean $is_underloaded
 * @property boolean $is_overloaded
 * @property string $AC
 * @property string $remark
 * @property EnrollmentInfo $EnrollmentInfo
 * @property Doctrine_Collection $StudentCourseGrades
 * 
 * @method integer             getEnrollmentInfoId()    Returns the current record's "enrollment_info_id" value
 * @method date                getDate()                Returns the current record's "date" value
 * @method boolean             getIsGradeComplain()     Returns the current record's "is_grade_complain" value
 * @method boolean             getIsReexam()            Returns the current record's "is_reexam" value
 * @method boolean             getIsMakeup()            Returns the current record's "is_makeup" value
 * @method boolean             getIsAdd()               Returns the current record's "is_add" value
 * @method boolean             getIsDrop()              Returns the current record's "is_drop" value
 * @method boolean             getIsUnderloaded()       Returns the current record's "is_underloaded" value
 * @method boolean             getIsOverloaded()        Returns the current record's "is_overloaded" value
 * @method string              getAC()                  Returns the current record's "AC" value
 * @method string              getRemark()              Returns the current record's "remark" value
 * @method EnrollmentInfo      getEnrollmentInfo()      Returns the current record's "EnrollmentInfo" value
 * @method Doctrine_Collection getStudentCourseGrades() Returns the current record's "StudentCourseGrades" collection
 * @method Registration        setEnrollmentInfoId()    Sets the current record's "enrollment_info_id" value
 * @method Registration        setDate()                Sets the current record's "date" value
 * @method Registration        setIsGradeComplain()     Sets the current record's "is_grade_complain" value
 * @method Registration        setIsReexam()            Sets the current record's "is_reexam" value
 * @method Registration        setIsMakeup()            Sets the current record's "is_makeup" value
 * @method Registration        setIsAdd()               Sets the current record's "is_add" value
 * @method Registration        setIsDrop()              Sets the current record's "is_drop" value
 * @method Registration        setIsUnderloaded()       Sets the current record's "is_underloaded" value
 * @method Registration        setIsOverloaded()        Sets the current record's "is_overloaded" value
 * @method Registration        setAC()                  Sets the current record's "AC" value
 * @method Registration        setRemark()              Sets the current record's "remark" value
 * @method Registration        setEnrollmentInfo()      Sets the current record's "EnrollmentInfo" value
 * @method Registration        setStudentCourseGrades() Sets the current record's "StudentCourseGrades" collection
 * 
 * @package    srmsnew
 * @subpackage model
 * @author     EyuelG
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRegistration extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('registration');
        $this->hasColumn('enrollment_info_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('is_grade_complain', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_reexam', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_makeup', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_add', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_drop', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_underloaded', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_overloaded', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('AC', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('remark', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('EnrollmentInfo', array(
             'local' => 'enrollment_info_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('StudentCourseGrade as StudentCourseGrades', array(
             'local' => 'id',
             'foreign' => 'registration_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}