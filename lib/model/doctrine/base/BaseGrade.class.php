<?php

/**
 * BaseGrade
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $grade_type_id
 * @property varchar $gradechar
 * @property boolean $is_removable
 * @property boolean $is_repeated
 * @property boolean $is_calculated
 * @property float $min_value
 * @property float $max_value
 * @property float $value
 * @property GradeType $GradeType
 * @property Doctrine_Collection $StudentCourseGrade
 * 
 * @method integer             getGradeTypeId()        Returns the current record's "grade_type_id" value
 * @method varchar             getGradechar()          Returns the current record's "gradechar" value
 * @method boolean             getIsRemovable()        Returns the current record's "is_removable" value
 * @method boolean             getIsRepeated()         Returns the current record's "is_repeated" value
 * @method boolean             getIsCalculated()       Returns the current record's "is_calculated" value
 * @method float               getMinValue()           Returns the current record's "min_value" value
 * @method float               getMaxValue()           Returns the current record's "max_value" value
 * @method float               getValue()              Returns the current record's "value" value
 * @method GradeType           getGradeType()          Returns the current record's "GradeType" value
 * @method Doctrine_Collection getStudentCourseGrade() Returns the current record's "StudentCourseGrade" collection
 * @method Grade               setGradeTypeId()        Sets the current record's "grade_type_id" value
 * @method Grade               setGradechar()          Sets the current record's "gradechar" value
 * @method Grade               setIsRemovable()        Sets the current record's "is_removable" value
 * @method Grade               setIsRepeated()         Sets the current record's "is_repeated" value
 * @method Grade               setIsCalculated()       Sets the current record's "is_calculated" value
 * @method Grade               setMinValue()           Sets the current record's "min_value" value
 * @method Grade               setMaxValue()           Sets the current record's "max_value" value
 * @method Grade               setValue()              Sets the current record's "value" value
 * @method Grade               setGradeType()          Sets the current record's "GradeType" value
 * @method Grade               setStudentCourseGrade() Sets the current record's "StudentCourseGrade" collection
 * 
 * @package    srmsnew
 * @subpackage model
 * @author     EyuelG
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGrade extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('grade');
        $this->hasColumn('grade_type_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('gradechar', 'varchar', 15, array(
             'type' => 'varchar',
             'notnull' => true,
             'unique' => true,
             'length' => 15,
             ));
        $this->hasColumn('is_removable', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('is_repeated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('is_calculated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('min_value', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             ));
        $this->hasColumn('max_value', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             ));
        $this->hasColumn('value', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('GradeType', array(
             'local' => 'grade_type_id',
             'foreign' => 'id'));

        $this->hasMany('StudentCourseGrade', array(
             'local' => 'id',
             'foreign' => 'grade_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}